# Conjecture: Process will always converge onto the same sequence:
# Either a repeating 1 (Happy Number) or some other repeating sequence
# Cycle detection is done using HashSet
# Time Complexity: O(log(n))
# Space Complexity: O(k) where k is the length of the number sequence generated by the process above

class Solution:
    def isHappy(self, n: int) -> bool:
        seen = set()
        while n not in seen:
            seen.add(n)
            digits = str(n)
            sum = 0
            for d in digits:
                sum += pow(int(d),2)
            if sum == 1:
                return True
            n = sum
        return False